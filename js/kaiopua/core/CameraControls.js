(function(f){function n(a){a=a||{};this.utilVec31Update=new THREE.Vector3;this.utilVec32Update=new THREE.Vector3;this.utilVec33Update=new THREE.Vector3;this.utilQ31Update=new THREE.Quaternion;this.utilQ32Update=new THREE.Quaternion;this.utilQ31Rotate=new THREE.Quaternion;this.options=$.extend(!0,this.options||{},b.options,a.options);this.position=new THREE.Vector3;this.up=d.cardinalAxes.up.clone();this.forward=d.cardinalAxes.forward.clone();this.positionBase=new THREE.Vector3;this.positionBaseTarget=
new THREE.Vector3;this.positionMove=new THREE.Vector3;this.positionOffset=new THREE.Vector3;this.positionOffsetTarget=new THREE.Vector3;this.rotateTarget=this.rotating=!1;this.rotationOffset=new THREE.Quaternion;this.rotationOffsetTarget=new THREE.Quaternion;this.rotationConstrained=new THREE.Vector3;this.rotationBase=new THREE.Vector3(-Math.PI*0.2,Math.PI,0);this.rotationRotated=new THREE.Vector3;this.rotationRotatedLast=new THREE.Vector3;this.rotationRotatedDelta=new THREE.Vector3;this.rotationTotal=
new THREE.Vector3;this.rotationDelta=new THREE.Vector3;this.rotationDeltaTotal=new THREE.Vector3;this.rotationTarget=new THREE.Quaternion;this.rotationCamera=new THREE.Quaternion;this.distanceNormal=new THREE.Vector3;this.distanceMagnitude=new THREE.Vector3;this.cameraLerpDelta=0.1;this.cameraLerpDeltaWhenNew=0;this.distanceThresholdPassed=!1;this.distanceThresholdMax=this.positionOffset.length()*this.options.distanceThresholdPct;this.distanceSpeed=0;this.distanceSpeedPct=this.options.distanceSpeedPctMin;
this.boundRadius=this.options.boundRadiusBase;this.boundRadiusPct=this.options.boundRadiusPctMax;this.boundRadiusMod=this.options.boundRadiusModMax;this.moved=!0;this.onCameraMoved=new signals.Signal;this.camera=a.camera;this.target=a.target;this.controllable=this.enabled=!1}function o(a,b){b=b||f.get_pointer(a);this.rotationDelta.set(-b.deltaY*this.options.rotationSpeedDelta,-b.deltaX*this.options.rotationSpeedDelta,0);this.rotationDeltaTotal.addSelf(this.rotationDelta)}function p(){this.rotating=
!0}function q(){this.rotating=!1}function r(a){a&&(a=a.event?a.event:a,this.boundRadiusMod-=(a.originalEvent||a).wheelDelta*(this.options.boundRadiusModSpeed/this.boundRadiusPct))}function s(){var a=this._target,b,c,g,h=this.utilVec31Update,j=this.utilVec32Update,i=this.utilQ32Update,f=this.cameraLerpDelta,l=this.utilVec33Update;if(this.enabled===!0){if(this.moved===!0)this.moved=!1,this.onCameraMoved.dispatch();if(a instanceof THREE.Object3D!==!0)h.copy(this.positionOffset);else{matrixWorld=a.matrixWorld;
c=matrixWorld.getMaxScaleOnAxis();b=matrixWorld.getPosition();h.copy(this.positionOffset).multiplyScalar(c);c=k.distance_between(this.position,b);if(this.targetNew===!0&&c-this.options.distanceThresholdMin<=this.distanceThresholdMax)this.targetNew=!1,this.distanceThresholdPassed=this.targetTransitioned=!0;if(c>this.options.distanceThresholdMin){this.distanceThresholdMax=h.length()*this.options.distanceThresholdPct;if(this.targetNew!==!0&&c-this.options.distanceThresholdMin>this.distanceThresholdMax)g=
c-this.distanceThresholdMax,this.distanceThresholdPassed=!0,this.distanceSpeed=Math.max(this.distanceSpeed,g);else if(this.distanceThresholdPassed===!1)a.moving===!0?this.distanceSpeedPct+=(this.options.distanceSpeedPctMin-this.distanceSpeedPct)*this.options.distanceSpeedPctAlphaShrink:(this.targetNew===!0?(g=this.distanceSpeedPctWhenNew,this.distanceSpeedPctWhenNew=Math.min(this.options.distanceSpeedPctAlphaGrow,this.distanceSpeedPctWhenNew+this.options.distanceSpeedPctWhenNewGrow)):g=this.options.distanceSpeedPctAlphaGrow,
this.distanceSpeedPct+=(this.options.distanceSpeedPctMax-this.distanceSpeedPct)*g),this.distanceSpeed=Math.max(this.distanceSpeed,c*this.distanceSpeedPct);c=Math.min(1,c/Math.max(this.distanceSpeed,this.distanceThresholdMax));this.distanceNormal.sub(b,this.position).normalize();this.distanceMagnitude.copy(this.distanceNormal).multiplyScalar(this.distanceSpeed*c);this.position.addSelf(this.distanceMagnitude)}else if(this.distanceThresholdPassed!==!1)this.position.copy(b),this.distanceSpeed=0,this.distanceThresholdPassed=
!1;i.copy(a.quaternion);a&&a.facing instanceof THREE.Quaternion&&(c=(new THREE.Quaternion).copy(a.facing).inverse(),i.multiplySelf(c))}c=this._target;this.rotationConstrained.copy(this.rotationBase);this.rotationRotatedLast.copy(this.rotationRotated);this.targetNew===!0||c&&c.moving===!0&&this.rotating!==!0&&this.rotateTarget!==!0?(this.rotationRotated.multiplyScalar(this.options.rotationReturnDecay),this.rotationConstrained.addSelf(this.rotationRotated)):(this.rotationRotated.x=e.clamp(e.rad_between_PI(this.rotationRotated.x+
this.rotationDeltaTotal.x),this.options.rotationMinX,this.options.rotationMaxX),this.rotationRotated.y=e.clamp(e.rad_between_PI(this.rotationRotated.y+this.rotationDeltaTotal.y),this.options.rotationMinY,this.options.rotationMaxY),this.rotateTarget===!0?(this.rotationRotatedDelta.sub(this.rotationRotated,this.rotationRotatedLast),typeof c.turn_by==="function"?c.turn_by(this.rotationRotatedDelta.y):(targetRotateAxis=c.rigidBody?c.rigidBody.axes.up:this.up,g=this.utilQ31Rotate.setFromAxisAngle(targetRotateAxis,
this.rotationRotatedDelta.y),c.quaternion.multiplySelf(g)),this.rotationConstrained.x+=this.rotationRotated.x):this.rotationConstrained.addSelf(this.rotationRotated));this.rotationConstrained.x=e.clamp(e.rad_between_PI(this.rotationConstrained.x),this.options.rotationMinX,this.options.rotationMaxX);this.rotationConstrained.y=e.clamp(e.rad_between_PI(this.rotationConstrained.y),this.options.rotationMinY,this.options.rotationMaxY);this.rotationOffsetTarget.setFromEuler(this.rotationConstrained,"YXZ");
this.rotationOffset.slerpSelf(this.rotationOffsetTarget,this.options.rotationSpeed);this.rotationDeltaTotal.multiplyScalar(this.options.rotationDeltaDecay);this.boundRadiusMod=e.clamp(this.boundRadiusMod,this.options.boundRadiusModMin/this.boundRadiusPct,this.options.boundRadiusModMax/this.boundRadiusPct);this.positionMove.z=this.boundRadius*this.boundRadiusMod;this.positionBaseTarget.set(this.options.positionBaseX,this.options.positionBaseY,this.options.positionBaseZ);this.positionBase.lerpSelf(this.positionBaseTarget,
this.options.positionBaseSpeed);this.positionOffsetTarget.add(this.positionBase,this.positionMove);this.positionOffset.lerpSelf(this.positionOffsetTarget,this.targetNew===!0?this.options.positionOffsetSpeedWhenNew:this.options.positionOffsetSpeed);if(this.targetNew===!0)f=this.cameraLerpDeltaWhenNew,this.cameraLerpDeltaWhenNew=Math.min(this.cameraLerpDelta,this.cameraLerpDeltaWhenNew+(this.cameraLerpDelta-this.cameraLerpDeltaWhenNew)*this.options.cameraLerpDeltaWhenNewGrow);this.rotationTarget.slerpSelf(i,
f);this.rotationCamera.copy(this.rotationTarget).multiplySelf(this.rotationOffset);this.moved=k.different(this.rotationCamera,this.camera.quaternion);this.camera.quaternion.copy(this.rotationCamera);this.camera.quaternion.multiplyVector3(h);j.add(this.position,h);if(this.moved!==!0)this.moved=k.different(this.camera.position,j);if(this.targetNew!==!0&&this.moved===!0&&(i=k.vector_between(b,j),h=i.length(),l.copy(i).normalize(),(a=m.raycast({octrees:d.scene.octree,origin:b,direction:l,far:h,ignore:a}))&&
a.distance<Number.MAX_VALUE))a=Math.max(0,h-a.distance),j.addSelf(l.multiplyScalar(-a));this.camera.position.copy(j)}}var d=f.shared=f.shared||{},b={},e,k,m;f.asset_register("js/kaiopua/core/CameraControls.js",{data:b,requirements:["js/kaiopua/utils/MathHelper.js","js/kaiopua/utils/VectorHelper.js","js/kaiopua/utils/ObjectHelper.js","js/kaiopua/utils/RayHelper.js","js/kaiopua/utils/PhysicsHelper.js"],callbacksOnReqs:function(a,f,c,g){e=a;k=f;m=g;b.options={cameraLerpDeltaWhenNewGrow:0.02,positionBaseX:0,
positionBaseY:0,positionBaseZ:0,positionBaseSpeed:0.1,positionOffsetSpeed:0.1,positionOffsetSpeedWhenNew:0.05,boundRadiusBase:500,boundRadiusModMin:1.25,boundRadiusModMax:3,boundRadiusModSpeed:0.001,boundRadiusPctMin:0.25,boundRadiusPctMax:1,rotationMaxX:Math.PI*0.5,rotationMinX:-Math.PI*0.5,rotationMaxY:Math.PI,rotationMinY:-Math.PI,rotationSpeed:0.1,rotationSpeedDelta:0.001,rotationReturnDecay:0.8,rotationDeltaDecay:0.8,distanceThresholdMin:1,distanceThresholdPct:0.35,distanceSpeedPctMax:0.25,distanceSpeedPctMin:0.01,
distanceSpeedPctAlphaGrow:0.025,distanceSpeedPctAlphaShrink:0.1,distanceSpeedPctWhenNew:0,distanceSpeedPctWhenNewGrow:5.0E-4};b.Instance=n;b.Instance.prototype.rotate_start=p;b.Instance.prototype.rotate=o;b.Instance.prototype.rotate_stop=q;b.Instance.prototype.zoom=r;b.Instance.prototype.update=s;Object.defineProperty(b.Instance.prototype,"camera",{get:function(){return this._camera},set:function(a){if(typeof a!=="undefined")this._camera=a,this._camera.useQuaternion=!0,this._camera.quaternion.setFromRotationMatrix(this._camera.matrix)}});
Object.defineProperty(b.Instance.prototype,"target",{get:function(){return this._target},set:function(a){this.targetLast=this._target;this._target=a;this.boundRadius=this._target instanceof THREE.Object3D?this._target.boundRadius:this.options.boundRadiusBase;this.boundRadiusPct=e.clamp(this.boundRadius/this.options.boundRadiusBase,this.options.boundRadiusPctMin,this.options.boundRadiusPctMax);if(this._target!==this.targetLast)this.targetTransitioned=!1,this.targetNew=!0,this.distanceThresholdPassed=
!1,this.distanceSpeed=this.cameraLerpDeltaWhenNew=this.distanceSpeedPctWhenNew=0,this.distanceSpeedPct=this.options.distanceSpeedPctMin}});Object.defineProperty(b.Instance.prototype,"enabled",{get:function(){return this._enabled},set:function(a){var b=this._enabled;this._enabled=a;this._enabled===!0&&b!==!0&&(this.position.copy(this.camera.position),this.rotationTarget.copy(this.camera.quaternion))}});Object.defineProperty(b.Instance.prototype,"controllable",{get:function(){return this._controllable},
set:function(a){this._controllable=a;this._controllable===!0?(d.signals.onGamePointerDragStarted.add(this.rotate_start,this),d.signals.onGamePointerDragged.add(this.rotate,this),d.signals.onGamePointerDragEnded.add(this.rotate_stop,this),d.signals.onGamePointerWheel.add(this.zoom,this)):(d.signals.onGamePointerDragStarted.remove(this.rotate_start,this),d.signals.onGamePointerDragged.remove(this.rotate,this),d.signals.onGamePointerDragEnded.remove(this.rotate_stop,this),d.signals.onGamePointerWheel.remove(this.zoom,
this))}})},wait:!0})})(KAIOPUA);
